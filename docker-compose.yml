version: "3"
services:
  web-app:
    image: mostafamaged/learning
    env_file:
      - .env
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    depends_on:
      - mongo
      - redis
      # - postgres-db
  # postgres-db:
  #   image: postgres
  #   restart: always
  #   environment:
  #     POSTGRES_USER: root
  #     POSTGRES_PASSWORD: example
  #   volumes:
  #     - postgres-db:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  mongo:
    image: mongo
    restart: always
    volumes:
      - mongo-db:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGO_INITDB_ROOT_PORT: 27017
  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: "27017"
    ports:
      - "0.0.0.0:8081:8081"
    depends_on:
      - mongo
  redis:
    image: redis
    restart: always
    volumes:
      - redis:/data
  web-server:
    image: nginx:stable-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - web-app
  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 30
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_LABEL_ENABLE=true

volumes:
  mongo-db:
  redis:
  postgres-db:
